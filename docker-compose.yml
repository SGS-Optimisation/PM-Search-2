version: '3'

networks:
    laravel:
        driver: bridge

volumes:
    pmsearch-mysql:
        driver: local

services:
    app:
        build:
            context: ./dockerfiles
            dockerfile: nginx.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-app
        ports:
            - "80:80"
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - php
            - redis
            - queue
        networks:
            - laravel
        expose:
            - 80

    php:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-php
        ports:
            - "9000:9000"
        depends_on:
            - composer
            - migrations
        volumes:
            - ./:/var/www/html:delegated
        networks:
            - laravel
        environment:
            APP_ENV: local
            CONTAINER_ROLE: app

    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'pmsearch-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - laravel
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    redis:
        image: redis:alpine
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - laravel
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    composer:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-composer
        volumes:
            - ./:/var/www/html
        entrypoint: [ 'composer', 'install', '--ignore-platform-reqs' ]
        networks:
            - laravel
        environment:
            APP_ENV: local
            CONTAINER_ROLE: composer

    migrations:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-migrations
        volumes:
            - ./:/var/www/html
        depends_on:
            - mysql
        command: [ 'php', '/var/www/html/artisan', "migrate" ]
        networks:
            - laravel
        environment:
            APP_ENV: local
            CONTAINER_ROLE: composer

    npm:
        image: node:current-alpine
        volumes:
            - ./:/var/www/html
        ports:
            - "3000:3000"
            - "3001:3001"
            - "5173:5173"
        working_dir: /var/www/html
        command: [ '/bin/sh', '-c', 'npm install && npm run build' ]
        networks:
            - laravel

    artisan:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-artisan
        volumes:
            - ./:/var/www/html:delegated
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        networks:
            - laravel
        environment:
            APP_ENV: local
            CONTAINER_ROLE: artisan

    queue:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-queue
        volumes:
            - ./:/var/www/html:delegated
        command: [ 'php', '/var/www/html/artisan', "queue:work", "--verbose", "--tries=3", "--timeout=90" ]
        depends_on:
            - php
        networks:
            - laravel
        environment:
            APP_ENV: local
            CONTAINER_ROLE: scheduler
