version: '3'

networks:
    laravel:
        driver: bridge

volumes:
    pmsearch-uploads:
        driver: azure_file
        driver_opts:
            share_name: pmsearchuiuploads
            storage_account_name: pmsearchuistorage
    pmsearch-mysql:
        driver: azure_file
        driver_opts:
            share_name: pmsearchuitestvolume
            storage_account_name: pmsearchuistorage

services:
    app:
        build:
            context: .
            dockerfile: dockerfiles/nginx.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-app
        ports:
            - "80:80"
        depends_on:
            - php
            - redis
            - queue
        networks:
            - laravel
        expose:
            - 80

    php:
        build:
            context: .
            dockerfile: dockerfiles/php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        env_file: ./.env
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-php
        ports:
            - "9000:9000"
        depends_on:
            - mysql
        networks:
            - laravel
        volumes:
            - pmsearch-uploads:/var/www/html/storage/app
        environment:
            APP_ENV: local
            CONTAINER_ROLE: app

    queue:
        build:
            context: .
            dockerfile: dockerfiles/php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        env_file: ./.env
        image: sgscoaisearchfrontend.azurecr.io/pm-search-ui-queue
        command: [ 'php', '/var/www/html/artisan', "queue:work", "--verbose", "--tries=3", "--timeout=90" ]
        depends_on:
            - mysql
        networks:
            - laravel
        volumes:
            - pmsearch-uploads:/var/www/html/storage/app
        environment:
            APP_ENV: local
            CONTAINER_ROLE: worker

    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'pmsearch-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - laravel
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    redis:
        image: redis:alpine
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - laravel
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s


