# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '70658e8e-d6ac-4b10-917a-34d62e17139a'
  containerRegistry: 'sgscoaisearchfrontend.azurecr.io'
  frontendImageRepository: 'pm-search-ui-nginx'
  frontendDockerfilePath: 'nginx.dockerfile'
  backendImageRepository: 'pm-search-ui-php'
  backendDockerfilePath: 'dockerfiles/php.dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build backend image to container registry
            env:
              NOVA_USERNAME: $(NOVA_USERNAME)
              NOVA_LICENSE_KEY: $(NOVA_LICENSE_KEY)
            inputs:
              command: build
              repository: $(backendImageRepository)
              buildContext: $(Build.Repository.LocalPath)
              dockerfile: $(backendDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
              arguments: '--build-arg NOVA_USERNAME=$(NOVA_USERNAME) --build-arg NOVA_LICENSE_KEY=$(NOVA_LICENSE_KEY)'

          - task: Docker@2
            displayName: Push
            inputs:
              command: push
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(backendImageRepository)
              tags: |
                latest
                $(Build.BuildId)

          - task: Docker@2
            displayName: Build and push frontend image to container registry
            inputs:
              command: buildAndPush
              repository: $(frontendImageRepository)
              dockerfile: $(frontendDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
